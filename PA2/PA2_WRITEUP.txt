Program assignment 2[50pts] Web service works – API returns query suggestions in JSON (fast!)[20pts] Client-side AJAX & modify DOM to show retrieved query suggestions[20pts] Web service written in C# – C# best practices![10pts] Query suggestion web service runs on Azure

This assignment have three main parts, which are the ASMX C# file, Trie class and TrieNode class. In the ASMX file it include three web methods, downloadFile, buildTrie and searchTree. Also the wiki page, I wrote a reader to read though the whole file and filter out all the lines that contains others beside [A-Z] and [_]. By pre-processing the file, it will provide a better suggestion for user. After this, I uploaded to the blob storage. And used the connection string to connect the blob server to this assignment.   The downloadFile method is to use for download the wiki title file to the cloud service. The buildTrie method will read that file line by line from the cloud service, and pass it to the sub method that under the Trie class, which called addtitle. This will add a “#” at the end of the string, which identify the later method to set the isWord to true.  The TrieNode class contains the child, charKey and isWord. Child is connect to the next node; charKey is the current character; IsWord is a Boolean that show is it the end of a word. For the Node class, I used HybirdDictionary to store the key and value, which is very like a map. I setup the root of the tree as a space. The addtitle helper method inside the node class helps me to build the tree. It will check if that letter is the last, then it will not add another node as child. If that letter is not the last letter in the word, then it will create another node and contain the charKey. The addtitle method also use a performance counter to check the current available memory in the machine, if the memory is lower than 50mb then it will stop adding title to the tree.The search method will pass in the input of string from the index.html into the searchTree method. Then it will call its helper method in Trie class, which is searchForPerfix. It will return a list of array of suggestion. This method will pass into another helper method. This method will take six parameters to do the recursion. Which are the current node, user input, input string’s length, current counter for string length, the list of result and the current word. Those parameters will continue to search the prefix, join those characters as a string and if the current node is isWord then save it to the list of result.    